// Code generated by MockGen. DO NOT EDIT.
// Source: service/service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIWalletService is a mock of IWalletService interface.
type MockIWalletService struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletServiceMockRecorder
}

// MockIWalletServiceMockRecorder is the mock recorder for MockIWalletService.
type MockIWalletServiceMockRecorder struct {
	mock *MockIWalletService
}

// NewMockIWalletService creates a new mock instance.
func NewMockIWalletService(ctrl *gomock.Controller) *MockIWalletService {
	mock := &MockIWalletService{ctrl: ctrl}
	mock.recorder = &MockIWalletServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWalletService) EXPECT() *MockIWalletServiceMockRecorder {
	return m.recorder
}

// GetWallets mocks base method.
func (m *MockIWalletService) GetWallets() map[string]int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWallets")
	ret0, _ := ret[0].(map[string]int)
	return ret0
}

// GetWallets indicates an expected call of GetWallets.
func (mr *MockIWalletServiceMockRecorder) GetWallets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWallets", reflect.TypeOf((*MockIWalletService)(nil).GetWallets))
}

// GetWalletsByID mocks base method.
func (m *MockIWalletService) GetWalletsByID(arg0 string) (int, int) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletsByID", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(int)
	return ret0, ret1
}

// GetWalletsByID indicates an expected call of GetWalletsByID.
func (mr *MockIWalletServiceMockRecorder) GetWalletsByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletsByID", reflect.TypeOf((*MockIWalletService)(nil).GetWalletsByID), arg0)
}

// WalletCreate mocks base method.
func (m *MockIWalletService) WalletCreate(arg0 string) (map[string]int, int) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WalletCreate", arg0)
	ret0, _ := ret[0].(map[string]int)
	ret1, _ := ret[1].(int)
	return ret0, ret1
}

// WalletCreate indicates an expected call of WalletCreate.
func (mr *MockIWalletServiceMockRecorder) WalletCreate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WalletCreate", reflect.TypeOf((*MockIWalletService)(nil).WalletCreate), arg0)
}

// WalletTransaction mocks base method.
func (m *MockIWalletService) WalletTransaction(arg0 string, arg1 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WalletTransaction", arg0, arg1)
	ret0, _ := ret[0].(int)
	return ret0
}

// WalletTransaction indicates an expected call of WalletTransaction.
func (mr *MockIWalletServiceMockRecorder) WalletTransaction(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WalletTransaction", reflect.TypeOf((*MockIWalletService)(nil).WalletTransaction), arg0, arg1)
}
